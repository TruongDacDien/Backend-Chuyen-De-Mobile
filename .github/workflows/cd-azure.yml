name: CD (Azure, GHCR)

on:
  push:
    branches: [ dev, main ]

permissions:
  contents: read
  packages: write   # c·∫ßn ƒë·ªÉ push GHCR
  id-token: write   # ƒë·ªÉ azure/login OIDC (n·∫øu b·∫°n d√πng)

jobs:
  build-and-deploy-staging:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://timeface-backend-staging.azurewebsites.net
    
    # üëá T√™n job n√†y s·∫Ω xu·∫•t hi·ªán nh∆∞ 1 ‚Äúrequired check‚Äù c√≥ t√™n "build-and-deploy-staging"
    name: build-and-deploy-staging
    steps:
      - uses: actions/checkout@v4

      # (N·∫øu c√≥ build step node, th√™m t·∫°i ƒë√¢y ‚Äî kh√¥ng b·∫Øt bu·ªôc cho container)

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image (staging)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:sha-${{ github.sha }}
            ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:staging-latest

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}   # SPN JSON

      # ƒê·∫£m b·∫£o App Settings t·ªëi thi·ªÉu tr√™n App Service (1 l·∫ßn/ ho·∫∑c m·ªói deploy tu·ª≥ b·∫°n)
      - name: Ensure App Settings (staging)
        run: |
          az webapp config appsettings set \
            --resource-group ${{ secrets.AZURE_RG }} \
            --name ${{ secrets.AZURE_WEBAPP_STAGING }} \
            --settings PORT=3000 WEBSITES_PORT=3000 WEBSITES_CONTAINER_START_TIME_LIMIT=1800 \
                       MONGO_URI='${{ secrets.MONGO_URI }}' \
                       JWT_SECRET='${{ secrets.JWT_SECRET }}' \
                       CLOUDINARY_CLOUD_NAME='${{ secrets.CLOUDINARY_CLOUD_NAME }}' \
                       CLOUDINARY_API_KEY='${{ secrets.CLOUDINARY_API_KEY }}' \
                       CLOUDINARY_API_SECRET='${{ secrets.CLOUDINARY_API_SECRET }}'
        shell: bash

      - name: Deploy to Azure WebApp (staging)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_STAGING }}     # v√≠ d·ª•: timeface-backend-staging
          images: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:staging-latest

  build-and-deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://timeface-backend-prod.azurewebsites.net
    steps:
      - uses: actions/checkout@v4

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image (prod)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:sha-${{ github.sha }}
            ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:prod-latest

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure App Settings (prod)
        run: |
          az webapp config appsettings set \
            --resource-group ${{ secrets.AZURE_RG }} \
            --name ${{ secrets.AZURE_WEBAPP_PROD }} \
            --settings PORT=3000 WEBSITES_PORT=3000 WEBSITES_CONTAINER_START_TIME_LIMIT=1800
        shell: bash

      - name: Deploy to Azure WebApp (prod)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_PROD }}         # v√≠ d·ª•: timeface-backend-prod
          images: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:prod-latest
